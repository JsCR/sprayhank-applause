{
  "name": "sprayhank-applause",
  "version": "2.0.4",
  "description": "Human-friendly replacements.",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/JsCR/sprayhank-applause.git"
  },
  "author": {
    "name": "sprayhank",
    "email": "671064591@qq.com",
    "url": "https://outa.im"
  },
  "exports": "./index.js",
  "engines": {
    "node": ">=10"
  },
  "scripts": {
    "test": "eslint . && ava",
    "release": "release-it",
    "prepare": "husky install"
  },
  "files": [
    "index.js",
    "src"
  ],
  "keywords": [
    "replace",
    "replacement",
    "pattern",
    "patterns",
    "match",
    "text",
    "string",
    "regex",
    "regexp",
    "json",
    "yaml",
    "cson",
    "flatten"
  ],
  "dependencies": {
    "lodash": "^4.17.21",
    "optional-require": "^1.0.2"
  },
  "devDependencies": {
    "@commitlint/cli": "^12.1.1",
    "@commitlint/config-conventional": "^12.1.1",
    "@release-it/conventional-changelog": "^2.0.1",
    "ava": "^3.15.0",
    "cz-conventional-changelog": "^3.3.0",
    "eslint": "^7.20.0",
    "eslint-config-xo": "^0.35.0",
    "eslint-config-xo-space": "^0.27.0",
    "husky": "^6.0.0",
    "release-it": "^14.6.1"
  },
  "optionalDependencies": {
    "cson-parser": "^4.0.8",
    "js-yaml": "^4.0.0"
  },
  "eslintConfig": {
    "extends": [
      "xo",
      "xo-space"
    ]
  },
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    }
  },
  "release-it": {
    "hooks": {
      "after:init": [
        "npm test"
      ]
    },
    "git": {
      "commitMessage": "chore: release v${version}"
    },
    "github": {
      "release": true
    },
    "plugins": {
      "@release-it/conventional-changelog": {
        "preset": "angular",
        "infile": "CHANGELOG.md"
      }
    }
  },
  "commitlint": {
    "rules": {
      "body-leading-blank": [
        1,
        "always"
      ],
      "body-max-line-length": [
        2,
        "always",
        100
      ],
      "footer-leading-blank": [
        1,
        "always"
      ],
      "footer-max-line-length": [
        2,
        "always",
        100
      ],
      "header-max-length": [
        2,
        "always",
        100
      ],
      "subject-case": [
        2,
        "never",
        [
          "sentence-case",
          "start-case",
          "pascal-case",
          "upper-case"
        ]
      ],
      "subject-empty": [
        2,
        "never"
      ],
      "subject-full-stop": [
        2,
        "never",
        "."
      ],
      "type-case": [
        2,
        "always",
        "lower-case"
      ],
      "type-empty": [
        2,
        "never"
      ],
      "type-enum": [
        2,
        "always",
        [
          "build",
          "chore",
          "ci",
          "docs",
          "feat",
          "fix",
          "perf",
          "refactor",
          "revert",
          "style",
          "test"
        ]
      ]
    },
    "prompt": {
      "questions": {
        "type": {
          "description": "Select the type of change that you're committing",
          "enum": {
            "feat": {
              "description": "A new feature",
              "title": "Features",
              "emoji": "‚ú®"
            },
            "fix": {
              "description": "A bug fix",
              "title": "Bug Fixes",
              "emoji": "üêõ"
            },
            "docs": {
              "description": "Documentation only changes",
              "title": "Documentation",
              "emoji": "üìö"
            },
            "style": {
              "description": "Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc)",
              "title": "Styles",
              "emoji": "üíé"
            },
            "refactor": {
              "description": "A code change that neither fixes a bug nor adds a feature",
              "title": "Code Refactoring",
              "emoji": "üì¶"
            },
            "perf": {
              "description": "A code change that improves performance",
              "title": "Performance Improvements",
              "emoji": "üöÄ"
            },
            "test": {
              "description": "Adding missing tests or correcting existing tests",
              "title": "Tests",
              "emoji": "üö®"
            },
            "build": {
              "description": "Changes that affect the build system or external dependencies (example scopes: gulp, broccoli, npm)",
              "title": "Builds",
              "emoji": "üõ†"
            },
            "ci": {
              "description": "Changes to our CI configuration files and scripts (example scopes: Travis, Circle, BrowserStack, SauceLabs)",
              "title": "Continuous Integrations",
              "emoji": "‚öôÔ∏è"
            },
            "chore": {
              "description": "Other changes that don't modify src or test files",
              "title": "Chores",
              "emoji": "‚ôªÔ∏è"
            },
            "revert": {
              "description": "Reverts a previous commit",
              "title": "Reverts",
              "emoji": "üóë"
            }
          }
        },
        "scope": {
          "description": "What is the scope of this change (e.g. component or file name)"
        },
        "subject": {
          "description": "Write a short, imperative tense description of the change"
        },
        "body": {
          "description": "Provide a longer description of the change"
        },
        "isBreaking": {
          "description": "Are there any breaking changes?"
        },
        "breakingBody": {
          "description": "A BREAKING CHANGE commit requires a body. Please enter a longer description of the commit itself"
        },
        "breaking": {
          "description": "Describe the breaking changes"
        },
        "isIssueAffected": {
          "description": "Does this change affect any open issues?"
        },
        "issuesBody": {
          "description": "If issues are closed, the commit requires a body. Please enter a longer description of the commit itself"
        },
        "issues": {
          "description": "Add issue references (e.g. \"fix #123\", \"re #123\".)"
        }
      }
    }
  }
}
